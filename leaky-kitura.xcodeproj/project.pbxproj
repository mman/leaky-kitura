// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"CCurl::CCurl::ProductTarget" /* CCurl */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_212 /* Build configuration list for PBXAggregateTarget "CCurl" */;
			buildPhases = (
			);
			dependencies = (
			);
			name = CCurl;
			productName = CCurl;
		};
		"CommonCrypto::CommonCrypto::ProductTarget" /* CommonCrypto */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_224 /* Build configuration list for PBXAggregateTarget "CommonCrypto" */;
			buildPhases = (
			);
			dependencies = (
			);
			name = CommonCrypto;
			productName = CommonCrypto;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_220 /* http_parser.c in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_168 /* http_parser.c */; };
		OBJ_221 /* utils.c in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_169 /* utils.c */; };
		OBJ_232 /* BaseCacheElement.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* BaseCacheElement.swift */; };
		OBJ_233 /* Credentials.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* Credentials.swift */; };
		OBJ_234 /* CredentialsPluginProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* CredentialsPluginProtocol.swift */; };
		OBJ_235 /* RouterRequest+UserProfile.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* RouterRequest+UserProfile.swift */; };
		OBJ_236 /* UserProfile.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* UserProfile.swift */; };
		OBJ_237 /* UserProfileDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* UserProfileDelegate.swift */; };
		OBJ_239 /* KituraSession.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-Session::KituraSession::Product" /* KituraSession.framework */; };
		OBJ_240 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_241 /* Kitura.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura::Kitura::Product" /* Kitura.framework */; };
		OBJ_242 /* KituraContracts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */; };
		OBJ_243 /* KituraTemplateEngine.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */; };
		OBJ_244 /* KituraNet.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::KituraNet::Product" /* KituraNet.framework */; };
		OBJ_245 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_246 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_247 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_248 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_273 /* CredentialsHTTPBasic.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* CredentialsHTTPBasic.swift */; };
		OBJ_274 /* CredentialsHTTPDigest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* CredentialsHTTPDigest.swift */; };
		OBJ_275 /* UserProfileLoader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* UserProfileLoader.swift */; };
		OBJ_276 /* VerifyPassword.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* VerifyPassword.swift */; };
		OBJ_278 /* Credentials.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-Credentials::Credentials::Product" /* Credentials.framework */; };
		OBJ_279 /* KituraSession.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-Session::KituraSession::Product" /* KituraSession.framework */; };
		OBJ_280 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_281 /* Kitura.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura::Kitura::Product" /* Kitura.framework */; };
		OBJ_282 /* KituraContracts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */; };
		OBJ_283 /* KituraTemplateEngine.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */; };
		OBJ_284 /* KituraNet.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::KituraNet::Product" /* KituraNet.framework */; };
		OBJ_285 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_286 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_287 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_288 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_304 /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* Crypto.swift */; };
		OBJ_305 /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* Cryptor.swift */; };
		OBJ_306 /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* Digest.swift */; };
		OBJ_307 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* HMAC.swift */; };
		OBJ_308 /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* KeyDerivation.swift */; };
		OBJ_309 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* Random.swift */; };
		OBJ_310 /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* Status.swift */; };
		OBJ_311 /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* StreamCryptor.swift */; };
		OBJ_312 /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* Updatable.swift */; };
		OBJ_313 /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* Utilities.swift */; };
		OBJ_320 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_56 /* Package.swift */; };
		OBJ_326 /* HeliumLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_188 /* HeliumLogger.swift */; };
		OBJ_327 /* HeliumStreamLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_189 /* HeliumStreamLogger.swift */; };
		OBJ_329 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_336 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_190 /* Package.swift */; };
		OBJ_341 /* CodableRouter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* CodableRouter.swift */; };
		OBJ_342 /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* Error.swift */; };
		OBJ_343 /* FileResourceServer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* FileResourceServer.swift */; };
		OBJ_344 /* HTTPStatusCode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* HTTPStatusCode.swift */; };
		OBJ_345 /* HTTPVersion.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* HTTPVersion.swift */; };
		OBJ_346 /* Headers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* Headers.swift */; };
		OBJ_347 /* InternalError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* InternalError.swift */; };
		OBJ_348 /* JSONPError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* JSONPError.swift */; };
		OBJ_349 /* Kitura.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* Kitura.swift */; };
		OBJ_350 /* LinkParameter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* LinkParameter.swift */; };
		OBJ_351 /* MimeTypeAcceptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_69 /* MimeTypeAcceptor.swift */; };
		OBJ_352 /* RouteRegex.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_70 /* RouteRegex.swift */; };
		OBJ_353 /* Router.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* Router.swift */; };
		OBJ_354 /* RouterElement.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* RouterElement.swift */; };
		OBJ_355 /* RouterElementWalker.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_73 /* RouterElementWalker.swift */; };
		OBJ_356 /* RouterHTTPVerbs+Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_74 /* RouterHTTPVerbs+Error.swift */; };
		OBJ_357 /* RouterHTTPVerbs_generated.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* RouterHTTPVerbs_generated.swift */; };
		OBJ_358 /* RouterHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_76 /* RouterHandler.swift */; };
		OBJ_359 /* RouterMethod.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* RouterMethod.swift */; };
		OBJ_360 /* RouterMiddleware.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* RouterMiddleware.swift */; };
		OBJ_361 /* RouterMiddlewareGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* RouterMiddlewareGenerator.swift */; };
		OBJ_362 /* RouterMiddlewareWalker.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* RouterMiddlewareWalker.swift */; };
		OBJ_363 /* RouterParameterWalker.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* RouterParameterWalker.swift */; };
		OBJ_364 /* RouterRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* RouterRequest.swift */; };
		OBJ_365 /* RouterResponse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_83 /* RouterResponse.swift */; };
		OBJ_366 /* SSLConfig.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_84 /* SSLConfig.swift */; };
		OBJ_367 /* Stack.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_85 /* Stack.swift */; };
		OBJ_368 /* String+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* String+Extensions.swift */; };
		OBJ_369 /* TemplatingError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_87 /* TemplatingError.swift */; };
		OBJ_370 /* BodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_89 /* BodyParser.swift */; };
		OBJ_371 /* BodyParserProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_90 /* BodyParserProtocol.swift */; };
		OBJ_372 /* JSONBodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_91 /* JSONBodyParser.swift */; };
		OBJ_373 /* MultiPartBodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_92 /* MultiPartBodyParser.swift */; };
		OBJ_374 /* ParsedBody.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_93 /* ParsedBody.swift */; };
		OBJ_375 /* Part.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_94 /* Part.swift */; };
		OBJ_376 /* RawBodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_95 /* RawBodyParser.swift */; };
		OBJ_377 /* TextBodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_96 /* TextBodyParser.swift */; };
		OBJ_378 /* URLEncodedBodyParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_97 /* URLEncodedBodyParser.swift */; };
		OBJ_379 /* ContentType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_99 /* ContentType.swift */; };
		OBJ_380 /* types.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_100 /* types.swift */; };
		OBJ_381 /* CacheRelatedHeadersSetter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_102 /* CacheRelatedHeadersSetter.swift */; };
		OBJ_382 /* CompositeHeadersSetter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_103 /* CompositeHeadersSetter.swift */; };
		OBJ_383 /* FileServer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_104 /* FileServer.swift */; };
		OBJ_384 /* RangeHeader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_105 /* RangeHeader.swift */; };
		OBJ_385 /* ResourcePathHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_106 /* ResourcePathHandler.swift */; };
		OBJ_386 /* ResponseHeadersSetter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_107 /* ResponseHeadersSetter.swift */; };
		OBJ_387 /* StaticFileServer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_108 /* StaticFileServer.swift */; };
		OBJ_389 /* KituraContracts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */; };
		OBJ_390 /* KituraTemplateEngine.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */; };
		OBJ_391 /* KituraNet.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::KituraNet::Product" /* KituraNet.framework */; };
		OBJ_392 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_393 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_394 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_395 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_408 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* Package.swift */; };
		OBJ_414 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* Package.swift */; };
		OBJ_420 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* Package.swift */; };
		OBJ_426 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_124 /* Package.swift */; };
		OBJ_432 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_175 /* Package.swift */; };
		OBJ_437 /* BodyFormat.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_112 /* BodyFormat.swift */; };
		OBJ_438 /* ClosureAliases.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_113 /* ClosureAliases.swift */; };
		OBJ_439 /* Coder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_115 /* Coder.swift */; };
		OBJ_440 /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_116 /* Extensions.swift */; };
		OBJ_441 /* QueryDecoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_117 /* QueryDecoder.swift */; };
		OBJ_442 /* QueryEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_118 /* QueryEncoder.swift */; };
		OBJ_443 /* Contracts.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_119 /* Contracts.swift */; };
		OBJ_445 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_452 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_120 /* Package.swift */; };
		OBJ_457 /* BufferList.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_127 /* BufferList.swift */; };
		OBJ_458 /* ClientRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_128 /* ClientRequest.swift */; };
		OBJ_459 /* ClientResponse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_129 /* ClientResponse.swift */; };
		OBJ_460 /* ConnectionUpgradeFactory.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_130 /* ConnectionUpgradeFactory.swift */; };
		OBJ_461 /* ConnectionUpgrader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_131 /* ConnectionUpgrader.swift */; };
		OBJ_462 /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_132 /* Error.swift */; };
		OBJ_463 /* FastCGI.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_134 /* FastCGI.swift */; };
		OBJ_464 /* FastCGIRecordCreate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_135 /* FastCGIRecordCreate.swift */; };
		OBJ_465 /* FastCGIRecordParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_136 /* FastCGIRecordParser.swift */; };
		OBJ_466 /* FastCGIServer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_137 /* FastCGIServer.swift */; };
		OBJ_467 /* FastCGIServerRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_138 /* FastCGIServerRequest.swift */; };
		OBJ_468 /* FastCGIServerResponse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_139 /* FastCGIServerResponse.swift */; };
		OBJ_469 /* HTTP.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_141 /* HTTP.swift */; };
		OBJ_470 /* HTTPServer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_142 /* HTTPServer.swift */; };
		OBJ_471 /* HTTPServerRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_143 /* HTTPServerRequest.swift */; };
		OBJ_472 /* HTTPServerResponse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_144 /* HTTPServerResponse.swift */; };
		OBJ_473 /* IncomingHTTPSocketProcessor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_145 /* IncomingHTTPSocketProcessor.swift */; };
		OBJ_474 /* KeepAliveState.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* KeepAliveState.swift */; };
		OBJ_475 /* HTTPParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_148 /* HTTPParser.swift */; };
		OBJ_476 /* HTTPParserStatus.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_149 /* HTTPParserStatus.swift */; };
		OBJ_477 /* ParseResults.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_150 /* ParseResults.swift */; };
		OBJ_478 /* URLParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_151 /* URLParser.swift */; };
		OBJ_479 /* HeadersContainer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_152 /* HeadersContainer.swift */; };
		OBJ_480 /* IncomingSocketHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_153 /* IncomingSocketHandler.swift */; };
		OBJ_481 /* IncomingSocketManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_154 /* IncomingSocketManager.swift */; };
		OBJ_482 /* IncomingSocketProcessor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_155 /* IncomingSocketProcessor.swift */; };
		OBJ_483 /* IncomingSocketProcessorCreator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_156 /* IncomingSocketProcessorCreator.swift */; };
		OBJ_484 /* ListenerGroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_157 /* ListenerGroup.swift */; };
		OBJ_485 /* SPIUtils.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_158 /* SPIUtils.swift */; };
		OBJ_486 /* Server.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_160 /* Server.swift */; };
		OBJ_487 /* ServerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_161 /* ServerDelegate.swift */; };
		OBJ_488 /* ServerLifecycleListener.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_162 /* ServerLifecycleListener.swift */; };
		OBJ_489 /* ServerMonitor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_163 /* ServerMonitor.swift */; };
		OBJ_490 /* ServerState.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_164 /* ServerState.swift */; };
		OBJ_491 /* ServerRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_165 /* ServerRequest.swift */; };
		OBJ_492 /* ServerResponse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_166 /* ServerResponse.swift */; };
		OBJ_494 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_495 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_496 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_497 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_507 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_109 /* Package.swift */; };
		OBJ_512 /* CookieCryptography.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* CookieCryptography.swift */; };
		OBJ_513 /* CookieManagement.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* CookieManagement.swift */; };
		OBJ_514 /* CookieParameter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* CookieParameter.swift */; };
		OBJ_515 /* InMemoryStore.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* InMemoryStore.swift */; };
		OBJ_516 /* RouterRequest+Session.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* RouterRequest+Session.swift */; };
		OBJ_517 /* Session.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* Session.swift */; };
		OBJ_518 /* SessionState.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* SessionState.swift */; };
		OBJ_519 /* Store.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* Store.swift */; };
		OBJ_521 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_522 /* Kitura.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura::Kitura::Product" /* Kitura.framework */; };
		OBJ_523 /* KituraContracts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */; };
		OBJ_524 /* KituraTemplateEngine.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */; };
		OBJ_525 /* KituraNet.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::KituraNet::Product" /* KituraNet.framework */; };
		OBJ_526 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_527 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_528 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_529 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_543 /* TemplateEngine.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_123 /* TemplateEngine.swift */; };
		OBJ_549 /* Logger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_193 /* Logger.swift */; };
		OBJ_556 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_194 /* Package.swift */; };
		OBJ_561 /* SSLService.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_178 /* SSLService.swift */; };
		OBJ_563 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_570 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_179 /* Package.swift */; };
		OBJ_575 /* Socket.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_182 /* Socket.swift */; };
		OBJ_576 /* SocketProtocols.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_183 /* SocketProtocols.swift */; };
		OBJ_577 /* SocketUtils.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_184 /* SocketUtils.swift */; };
		OBJ_584 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_185 /* Package.swift */; };
		OBJ_590 /* LclJSONSerialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* LclJSONSerialization.swift */; };
		OBJ_591 /* SwiftyJSON.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* SwiftyJSON.swift */; };
		OBJ_598 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Package.swift */; };
		OBJ_604 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* main.swift */; };
		OBJ_606 /* SwiftyJSON.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SwiftyJSON::SwiftyJSON::Product" /* SwiftyJSON.framework */; };
		OBJ_607 /* CredentialsHTTP.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-CredentialsHTTP::CredentialsHTTP::Product" /* CredentialsHTTP.framework */; };
		OBJ_608 /* Credentials.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-Credentials::Credentials::Product" /* Credentials.framework */; };
		OBJ_609 /* KituraSession.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-Session::KituraSession::Product" /* KituraSession.framework */; };
		OBJ_610 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_611 /* Kitura.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura::Kitura::Product" /* Kitura.framework */; };
		OBJ_612 /* KituraContracts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */; };
		OBJ_613 /* KituraTemplateEngine.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */; };
		OBJ_614 /* KituraNet.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::KituraNet::Product" /* KituraNet.framework */; };
		OBJ_615 /* SSLService.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SSLService::SSLService::Product" /* SSLService.framework */; };
		OBJ_616 /* Socket.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Socket::Socket::Product" /* Socket.framework */; };
		OBJ_617 /* CHTTPParser.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */; };
		OBJ_618 /* HeliumLogger.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */; };
		OBJ_619 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */; };
		OBJ_639 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		0B5EC307209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC308209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SwiftyJSON::SwiftyJSON";
			remoteInfo = SwiftyJSON;
		};
		0B5EC309209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-CredentialsHTTP::CredentialsHTTP";
			remoteInfo = CredentialsHTTP;
		};
		0B5EC30A209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-Credentials::Credentials";
			remoteInfo = Credentials;
		};
		0B5EC30B209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-Session::KituraSession";
			remoteInfo = KituraSession;
		};
		0B5EC30C209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		0B5EC30D209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura::Kitura";
			remoteInfo = Kitura;
		};
		0B5EC30E209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "KituraContracts::KituraContracts";
			remoteInfo = KituraContracts;
		};
		0B5EC30F209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC310209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-TemplateEngine::KituraTemplateEngine";
			remoteInfo = KituraTemplateEngine;
		};
		0B5EC311209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::KituraNet";
			remoteInfo = KituraNet;
		};
		0B5EC312209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC313209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC314209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC315209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC316209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC317209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC318209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC319209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC31A209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC31B209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "KituraContracts::KituraContracts";
			remoteInfo = KituraContracts;
		};
		0B5EC31C209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-TemplateEngine::KituraTemplateEngine";
			remoteInfo = KituraTemplateEngine;
		};
		0B5EC31D209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::KituraNet";
			remoteInfo = KituraNet;
		};
		0B5EC31E209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC31F209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC320209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC321209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC322209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		0B5EC323209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura::Kitura";
			remoteInfo = Kitura;
		};
		0B5EC324209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "KituraContracts::KituraContracts";
			remoteInfo = KituraContracts;
		};
		0B5EC325209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-TemplateEngine::KituraTemplateEngine";
			remoteInfo = KituraTemplateEngine;
		};
		0B5EC326209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::KituraNet";
			remoteInfo = KituraNet;
		};
		0B5EC327209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC328209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC329209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC32A209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC32B209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-Session::KituraSession";
			remoteInfo = KituraSession;
		};
		0B5EC32C209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		0B5EC32D209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura::Kitura";
			remoteInfo = Kitura;
		};
		0B5EC32E209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "KituraContracts::KituraContracts";
			remoteInfo = KituraContracts;
		};
		0B5EC32F209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-TemplateEngine::KituraTemplateEngine";
			remoteInfo = KituraTemplateEngine;
		};
		0B5EC330209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::KituraNet";
			remoteInfo = KituraNet;
		};
		0B5EC331209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC332209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC333209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
		0B5EC334209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC335209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-Credentials::Credentials";
			remoteInfo = Credentials;
		};
		0B5EC336209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-Session::KituraSession";
			remoteInfo = KituraSession;
		};
		0B5EC337209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		0B5EC338209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura::Kitura";
			remoteInfo = Kitura;
		};
		0B5EC339209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "KituraContracts::KituraContracts";
			remoteInfo = KituraContracts;
		};
		0B5EC33A209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-TemplateEngine::KituraTemplateEngine";
			remoteInfo = KituraTemplateEngine;
		};
		0B5EC33B209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::KituraNet";
			remoteInfo = KituraNet;
		};
		0B5EC33C209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SSLService::SSLService";
			remoteInfo = SSLService;
		};
		0B5EC33D209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Socket::Socket";
			remoteInfo = Socket;
		};
		0B5EC33E209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kitura-net::CHTTPParser";
			remoteInfo = CHTTPParser;
		};
		0B5EC33F209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "HeliumLogger::HeliumLogger";
			remoteInfo = HeliumLogger;
		};
		0B5EC340209CA0E80092A163 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LoggerAPI::LoggerAPI";
			remoteInfo = LoggerAPI;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Cryptor::Cryptor::Product" /* Cryptor.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Cryptor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = HeliumLogger.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-Credentials::Credentials::Product" /* Credentials.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Credentials.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-CredentialsHTTP::CredentialsHTTP::Product" /* CredentialsHTTP.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = CredentialsHTTP.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-Session::KituraSession::Product" /* KituraSession.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = KituraSession.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = KituraTemplateEngine.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = CHTTPParser.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura-net::KituraNet::Product" /* KituraNet.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = KituraNet.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kitura::Kitura::Product" /* Kitura.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Kitura.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"KituraContracts::KituraContracts::Product" /* KituraContracts.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = KituraContracts.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LoggerAPI.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_100 /* types.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = types.swift; sourceTree = "<group>"; };
		OBJ_102 /* CacheRelatedHeadersSetter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CacheRelatedHeadersSetter.swift; sourceTree = "<group>"; };
		OBJ_103 /* CompositeHeadersSetter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompositeHeadersSetter.swift; sourceTree = "<group>"; };
		OBJ_104 /* FileServer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FileServer.swift; sourceTree = "<group>"; };
		OBJ_105 /* RangeHeader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RangeHeader.swift; sourceTree = "<group>"; };
		OBJ_106 /* ResourcePathHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResourcePathHandler.swift; sourceTree = "<group>"; };
		OBJ_107 /* ResponseHeadersSetter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResponseHeadersSetter.swift; sourceTree = "<group>"; };
		OBJ_108 /* StaticFileServer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StaticFileServer.swift; sourceTree = "<group>"; };
		OBJ_109 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura.git-6522211175291160341/Package.swift"; sourceTree = "<group>"; };
		OBJ_112 /* BodyFormat.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BodyFormat.swift; sourceTree = "<group>"; };
		OBJ_113 /* ClosureAliases.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClosureAliases.swift; sourceTree = "<group>"; };
		OBJ_115 /* Coder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Coder.swift; sourceTree = "<group>"; };
		OBJ_116 /* Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Extensions.swift; sourceTree = "<group>"; };
		OBJ_117 /* QueryDecoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QueryDecoder.swift; sourceTree = "<group>"; };
		OBJ_118 /* QueryEncoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QueryEncoder.swift; sourceTree = "<group>"; };
		OBJ_119 /* Contracts.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Contracts.swift; sourceTree = "<group>"; };
		OBJ_120 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/KituraContracts.git--3897699854862625585/Package.swift"; sourceTree = "<group>"; };
		OBJ_123 /* TemplateEngine.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TemplateEngine.swift; sourceTree = "<group>"; };
		OBJ_124 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura-TemplateEngine.git--5059963620657797085/Package.swift"; sourceTree = "<group>"; };
		OBJ_127 /* BufferList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BufferList.swift; sourceTree = "<group>"; };
		OBJ_128 /* ClientRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClientRequest.swift; sourceTree = "<group>"; };
		OBJ_129 /* ClientResponse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClientResponse.swift; sourceTree = "<group>"; };
		OBJ_130 /* ConnectionUpgradeFactory.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConnectionUpgradeFactory.swift; sourceTree = "<group>"; };
		OBJ_131 /* ConnectionUpgrader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConnectionUpgrader.swift; sourceTree = "<group>"; };
		OBJ_132 /* Error.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Error.swift; sourceTree = "<group>"; };
		OBJ_134 /* FastCGI.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGI.swift; sourceTree = "<group>"; };
		OBJ_135 /* FastCGIRecordCreate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGIRecordCreate.swift; sourceTree = "<group>"; };
		OBJ_136 /* FastCGIRecordParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGIRecordParser.swift; sourceTree = "<group>"; };
		OBJ_137 /* FastCGIServer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGIServer.swift; sourceTree = "<group>"; };
		OBJ_138 /* FastCGIServerRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGIServerRequest.swift; sourceTree = "<group>"; };
		OBJ_139 /* FastCGIServerResponse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FastCGIServerResponse.swift; sourceTree = "<group>"; };
		OBJ_14 /* LclJSONSerialization.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LclJSONSerialization.swift; sourceTree = "<group>"; };
		OBJ_141 /* HTTP.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTP.swift; sourceTree = "<group>"; };
		OBJ_142 /* HTTPServer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPServer.swift; sourceTree = "<group>"; };
		OBJ_143 /* HTTPServerRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPServerRequest.swift; sourceTree = "<group>"; };
		OBJ_144 /* HTTPServerResponse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPServerResponse.swift; sourceTree = "<group>"; };
		OBJ_145 /* IncomingHTTPSocketProcessor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncomingHTTPSocketProcessor.swift; sourceTree = "<group>"; };
		OBJ_146 /* KeepAliveState.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeepAliveState.swift; sourceTree = "<group>"; };
		OBJ_148 /* HTTPParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPParser.swift; sourceTree = "<group>"; };
		OBJ_149 /* HTTPParserStatus.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPParserStatus.swift; sourceTree = "<group>"; };
		OBJ_15 /* SwiftyJSON.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwiftyJSON.swift; sourceTree = "<group>"; };
		OBJ_150 /* ParseResults.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ParseResults.swift; sourceTree = "<group>"; };
		OBJ_151 /* URLParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URLParser.swift; sourceTree = "<group>"; };
		OBJ_152 /* HeadersContainer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeadersContainer.swift; sourceTree = "<group>"; };
		OBJ_153 /* IncomingSocketHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncomingSocketHandler.swift; sourceTree = "<group>"; };
		OBJ_154 /* IncomingSocketManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncomingSocketManager.swift; sourceTree = "<group>"; };
		OBJ_155 /* IncomingSocketProcessor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncomingSocketProcessor.swift; sourceTree = "<group>"; };
		OBJ_156 /* IncomingSocketProcessorCreator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncomingSocketProcessorCreator.swift; sourceTree = "<group>"; };
		OBJ_157 /* ListenerGroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListenerGroup.swift; sourceTree = "<group>"; };
		OBJ_158 /* SPIUtils.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SPIUtils.swift; sourceTree = "<group>"; };
		OBJ_16 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/SwiftyJSON.git--6955445084174387031/Package.swift"; sourceTree = "<group>"; };
		OBJ_160 /* Server.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Server.swift; sourceTree = "<group>"; };
		OBJ_161 /* ServerDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerDelegate.swift; sourceTree = "<group>"; };
		OBJ_162 /* ServerLifecycleListener.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerLifecycleListener.swift; sourceTree = "<group>"; };
		OBJ_163 /* ServerMonitor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerMonitor.swift; sourceTree = "<group>"; };
		OBJ_164 /* ServerState.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerState.swift; sourceTree = "<group>"; };
		OBJ_165 /* ServerRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerRequest.swift; sourceTree = "<group>"; };
		OBJ_166 /* ServerResponse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ServerResponse.swift; sourceTree = "<group>"; };
		OBJ_168 /* http_parser.c */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.c; path = http_parser.c; sourceTree = "<group>"; };
		OBJ_169 /* utils.c */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.c; path = utils.c; sourceTree = "<group>"; };
		OBJ_171 /* utils.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = utils.h; sourceTree = "<group>"; };
		OBJ_172 /* http_parser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = http_parser.h; sourceTree = "<group>"; };
		OBJ_173 /* CHTTPParser.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CHTTPParser.h; sourceTree = "<group>"; };
		OBJ_174 /* module.modulemap */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.module-map"; name = module.modulemap; path = "/Users/mman/Projects/leaky-kitura/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap"; sourceTree = "<group>"; };
		OBJ_175 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura-net.git--7410958935072501107/Package.swift"; sourceTree = "<group>"; };
		OBJ_178 /* SSLService.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SSLService.swift; sourceTree = "<group>"; };
		OBJ_179 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/BlueSSLService.git--6577639804771281610/Package.swift"; sourceTree = "<group>"; };
		OBJ_182 /* Socket.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Socket.swift; sourceTree = "<group>"; };
		OBJ_183 /* SocketProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SocketProtocols.swift; sourceTree = "<group>"; };
		OBJ_184 /* SocketUtils.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SocketUtils.swift; sourceTree = "<group>"; };
		OBJ_185 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/BlueSocket.git-3162807777605905816/Package.swift"; sourceTree = "<group>"; };
		OBJ_188 /* HeliumLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumLogger.swift; sourceTree = "<group>"; };
		OBJ_189 /* HeliumStreamLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumStreamLogger.swift; sourceTree = "<group>"; };
		OBJ_19 /* CredentialsHTTPBasic.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CredentialsHTTPBasic.swift; sourceTree = "<group>"; };
		OBJ_190 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/HeliumLogger.git-2106793442615829935/Package.swift"; sourceTree = "<group>"; };
		OBJ_193 /* Logger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Logger.swift; sourceTree = "<group>"; };
		OBJ_194 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/LoggerAPI.git--6449715459278086880/Package.swift"; sourceTree = "<group>"; };
		OBJ_20 /* CredentialsHTTPDigest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CredentialsHTTPDigest.swift; sourceTree = "<group>"; };
		OBJ_21 /* UserProfileLoader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UserProfileLoader.swift; sourceTree = "<group>"; };
		OBJ_22 /* VerifyPassword.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VerifyPassword.swift; sourceTree = "<group>"; };
		OBJ_23 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura-CredentialsHTTP.git--2255905302832386242/Package.swift"; sourceTree = "<group>"; };
		OBJ_26 /* BaseCacheElement.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BaseCacheElement.swift; sourceTree = "<group>"; };
		OBJ_27 /* Credentials.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Credentials.swift; sourceTree = "<group>"; };
		OBJ_28 /* CredentialsPluginProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CredentialsPluginProtocol.swift; sourceTree = "<group>"; };
		OBJ_29 /* RouterRequest+UserProfile.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RouterRequest+UserProfile.swift"; sourceTree = "<group>"; };
		OBJ_30 /* UserProfile.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UserProfile.swift; sourceTree = "<group>"; };
		OBJ_31 /* UserProfileDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UserProfileDelegate.swift; sourceTree = "<group>"; };
		OBJ_32 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura-Credentials.git-1137106172743287290/Package.swift"; sourceTree = "<group>"; };
		OBJ_35 /* CookieCryptography.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CookieCryptography.swift; sourceTree = "<group>"; };
		OBJ_36 /* CookieManagement.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CookieManagement.swift; sourceTree = "<group>"; };
		OBJ_37 /* CookieParameter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CookieParameter.swift; sourceTree = "<group>"; };
		OBJ_38 /* InMemoryStore.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InMemoryStore.swift; sourceTree = "<group>"; };
		OBJ_39 /* RouterRequest+Session.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RouterRequest+Session.swift"; sourceTree = "<group>"; };
		OBJ_40 /* Session.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Session.swift; sourceTree = "<group>"; };
		OBJ_41 /* SessionState.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SessionState.swift; sourceTree = "<group>"; };
		OBJ_42 /* Store.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Store.swift; sourceTree = "<group>"; };
		OBJ_43 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/Kitura-Session.git-4044573149666132076/Package.swift"; sourceTree = "<group>"; };
		OBJ_46 /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Crypto.swift; sourceTree = "<group>"; };
		OBJ_47 /* Cryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cryptor.swift; sourceTree = "<group>"; };
		OBJ_48 /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Digest.swift; sourceTree = "<group>"; };
		OBJ_49 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_50 /* KeyDerivation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyDerivation.swift; sourceTree = "<group>"; };
		OBJ_51 /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		OBJ_52 /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Status.swift; sourceTree = "<group>"; };
		OBJ_53 /* StreamCryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StreamCryptor.swift; sourceTree = "<group>"; };
		OBJ_54 /* Updatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Updatable.swift; sourceTree = "<group>"; };
		OBJ_55 /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utilities.swift; sourceTree = "<group>"; };
		OBJ_56 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/mman/Projects/leaky-kitura/.build/checkouts/BlueCryptor.git-2709167748876642405/Package.swift"; sourceTree = "<group>"; };
		OBJ_59 /* CodableRouter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CodableRouter.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* Error.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Error.swift; sourceTree = "<group>"; };
		OBJ_61 /* FileResourceServer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FileResourceServer.swift; sourceTree = "<group>"; };
		OBJ_62 /* HTTPStatusCode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPStatusCode.swift; sourceTree = "<group>"; };
		OBJ_63 /* HTTPVersion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPVersion.swift; sourceTree = "<group>"; };
		OBJ_64 /* Headers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Headers.swift; sourceTree = "<group>"; };
		OBJ_65 /* InternalError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InternalError.swift; sourceTree = "<group>"; };
		OBJ_66 /* JSONPError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSONPError.swift; sourceTree = "<group>"; };
		OBJ_67 /* Kitura.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Kitura.swift; sourceTree = "<group>"; };
		OBJ_68 /* LinkParameter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinkParameter.swift; sourceTree = "<group>"; };
		OBJ_69 /* MimeTypeAcceptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MimeTypeAcceptor.swift; sourceTree = "<group>"; };
		OBJ_70 /* RouteRegex.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouteRegex.swift; sourceTree = "<group>"; };
		OBJ_71 /* Router.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Router.swift; sourceTree = "<group>"; };
		OBJ_72 /* RouterElement.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterElement.swift; sourceTree = "<group>"; };
		OBJ_73 /* RouterElementWalker.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterElementWalker.swift; sourceTree = "<group>"; };
		OBJ_74 /* RouterHTTPVerbs+Error.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RouterHTTPVerbs+Error.swift"; sourceTree = "<group>"; };
		OBJ_75 /* RouterHTTPVerbs_generated.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterHTTPVerbs_generated.swift; sourceTree = "<group>"; };
		OBJ_76 /* RouterHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterHandler.swift; sourceTree = "<group>"; };
		OBJ_77 /* RouterMethod.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterMethod.swift; sourceTree = "<group>"; };
		OBJ_78 /* RouterMiddleware.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterMiddleware.swift; sourceTree = "<group>"; };
		OBJ_79 /* RouterMiddlewareGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterMiddlewareGenerator.swift; sourceTree = "<group>"; };
		OBJ_80 /* RouterMiddlewareWalker.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterMiddlewareWalker.swift; sourceTree = "<group>"; };
		OBJ_81 /* RouterParameterWalker.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterParameterWalker.swift; sourceTree = "<group>"; };
		OBJ_82 /* RouterRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterRequest.swift; sourceTree = "<group>"; };
		OBJ_83 /* RouterResponse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RouterResponse.swift; sourceTree = "<group>"; };
		OBJ_84 /* SSLConfig.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SSLConfig.swift; sourceTree = "<group>"; };
		OBJ_85 /* Stack.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stack.swift; sourceTree = "<group>"; };
		OBJ_86 /* String+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "String+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_87 /* TemplatingError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TemplatingError.swift; sourceTree = "<group>"; };
		OBJ_89 /* BodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BodyParser.swift; sourceTree = "<group>"; };
		OBJ_9 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_90 /* BodyParserProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BodyParserProtocol.swift; sourceTree = "<group>"; };
		OBJ_91 /* JSONBodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSONBodyParser.swift; sourceTree = "<group>"; };
		OBJ_92 /* MultiPartBodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MultiPartBodyParser.swift; sourceTree = "<group>"; };
		OBJ_93 /* ParsedBody.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ParsedBody.swift; sourceTree = "<group>"; };
		OBJ_94 /* Part.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Part.swift; sourceTree = "<group>"; };
		OBJ_95 /* RawBodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RawBodyParser.swift; sourceTree = "<group>"; };
		OBJ_96 /* TextBodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TextBodyParser.swift; sourceTree = "<group>"; };
		OBJ_97 /* URLEncodedBodyParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URLEncodedBodyParser.swift; sourceTree = "<group>"; };
		OBJ_99 /* ContentType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentType.swift; sourceTree = "<group>"; };
		"SSLService::SSLService::Product" /* SSLService.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SSLService.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Socket::Socket::Product" /* Socket.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Socket.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"SwiftyJSON::SwiftyJSON::Product" /* SwiftyJSON.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SwiftyJSON.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"leaky-kitura::leaky-kitura::Product" /* leaky-kitura */ = {isa = PBXFileReference; lastKnownFileType = text; path = "leaky-kitura"; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_222 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_238 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_239 /* KituraSession.framework in Frameworks */,
				OBJ_240 /* Cryptor.framework in Frameworks */,
				OBJ_241 /* Kitura.framework in Frameworks */,
				OBJ_242 /* KituraContracts.framework in Frameworks */,
				OBJ_243 /* KituraTemplateEngine.framework in Frameworks */,
				OBJ_244 /* KituraNet.framework in Frameworks */,
				OBJ_245 /* SSLService.framework in Frameworks */,
				OBJ_246 /* Socket.framework in Frameworks */,
				OBJ_247 /* LoggerAPI.framework in Frameworks */,
				OBJ_248 /* CHTTPParser.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_277 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_278 /* Credentials.framework in Frameworks */,
				OBJ_279 /* KituraSession.framework in Frameworks */,
				OBJ_280 /* Cryptor.framework in Frameworks */,
				OBJ_281 /* Kitura.framework in Frameworks */,
				OBJ_282 /* KituraContracts.framework in Frameworks */,
				OBJ_283 /* KituraTemplateEngine.framework in Frameworks */,
				OBJ_284 /* KituraNet.framework in Frameworks */,
				OBJ_285 /* SSLService.framework in Frameworks */,
				OBJ_286 /* Socket.framework in Frameworks */,
				OBJ_287 /* LoggerAPI.framework in Frameworks */,
				OBJ_288 /* CHTTPParser.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_314 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_328 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_329 /* LoggerAPI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_388 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_389 /* KituraContracts.framework in Frameworks */,
				OBJ_390 /* KituraTemplateEngine.framework in Frameworks */,
				OBJ_391 /* KituraNet.framework in Frameworks */,
				OBJ_392 /* SSLService.framework in Frameworks */,
				OBJ_393 /* Socket.framework in Frameworks */,
				OBJ_394 /* LoggerAPI.framework in Frameworks */,
				OBJ_395 /* CHTTPParser.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_444 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_445 /* LoggerAPI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_493 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_494 /* SSLService.framework in Frameworks */,
				OBJ_495 /* Socket.framework in Frameworks */,
				OBJ_496 /* LoggerAPI.framework in Frameworks */,
				OBJ_497 /* CHTTPParser.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_520 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_521 /* Cryptor.framework in Frameworks */,
				OBJ_522 /* Kitura.framework in Frameworks */,
				OBJ_523 /* KituraContracts.framework in Frameworks */,
				OBJ_524 /* KituraTemplateEngine.framework in Frameworks */,
				OBJ_525 /* KituraNet.framework in Frameworks */,
				OBJ_526 /* SSLService.framework in Frameworks */,
				OBJ_527 /* Socket.framework in Frameworks */,
				OBJ_528 /* LoggerAPI.framework in Frameworks */,
				OBJ_529 /* CHTTPParser.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_544 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_550 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_562 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_563 /* Socket.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_578 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_592 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_605 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_606 /* SwiftyJSON.framework in Frameworks */,
				OBJ_607 /* CredentialsHTTP.framework in Frameworks */,
				OBJ_608 /* Credentials.framework in Frameworks */,
				OBJ_609 /* KituraSession.framework in Frameworks */,
				OBJ_610 /* Cryptor.framework in Frameworks */,
				OBJ_611 /* Kitura.framework in Frameworks */,
				OBJ_612 /* KituraContracts.framework in Frameworks */,
				OBJ_613 /* KituraTemplateEngine.framework in Frameworks */,
				OBJ_614 /* KituraNet.framework in Frameworks */,
				OBJ_615 /* SSLService.framework in Frameworks */,
				OBJ_616 /* Socket.framework in Frameworks */,
				OBJ_617 /* CHTTPParser.framework in Frameworks */,
				OBJ_618 /* HeliumLogger.framework in Frameworks */,
				OBJ_619 /* LoggerAPI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* Tests */ = {
			isa = PBXGroup;
			children = (
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_101 /* staticFileServer */ = {
			isa = PBXGroup;
			children = (
				OBJ_102 /* CacheRelatedHeadersSetter.swift */,
				OBJ_103 /* CompositeHeadersSetter.swift */,
				OBJ_104 /* FileServer.swift */,
				OBJ_105 /* RangeHeader.swift */,
				OBJ_106 /* ResourcePathHandler.swift */,
				OBJ_107 /* ResponseHeadersSetter.swift */,
				OBJ_108 /* StaticFileServer.swift */,
			);
			path = staticFileServer;
			sourceTree = "<group>";
		};
		OBJ_11 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* SwiftyJSON 17.0.1 */,
				OBJ_17 /* Kitura-CredentialsHTTP 2.0.1 */,
				OBJ_24 /* Kitura-Credentials 2.1.0 */,
				OBJ_33 /* Kitura-Session 3.1.0 */,
				OBJ_44 /* Cryptor 1.0.2 */,
				OBJ_57 /* Kitura 2.3.0 */,
				OBJ_110 /* KituraContracts 0.0.23 */,
				OBJ_121 /* Kitura-TemplateEngine 1.7.4 */,
				OBJ_125 /* Kitura-net 2.1.0 */,
				OBJ_176 /* SSLService 1.0.6 */,
				OBJ_180 /* Socket 1.0.6 */,
				OBJ_186 /* HeliumLogger 1.7.1 */,
				OBJ_191 /* LoggerAPI 1.7.3 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_110 /* KituraContracts 0.0.23 */ = {
			isa = PBXGroup;
			children = (
				OBJ_111 /* KituraContracts */,
				OBJ_120 /* Package.swift */,
			);
			name = "KituraContracts 0.0.23";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_111 /* KituraContracts */ = {
			isa = PBXGroup;
			children = (
				OBJ_112 /* BodyFormat.swift */,
				OBJ_113 /* ClosureAliases.swift */,
				OBJ_114 /* CodableQuery */,
				OBJ_119 /* Contracts.swift */,
			);
			name = KituraContracts;
			path = ".build/checkouts/KituraContracts.git--3897699854862625585/Sources/KituraContracts";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_114 /* CodableQuery */ = {
			isa = PBXGroup;
			children = (
				OBJ_115 /* Coder.swift */,
				OBJ_116 /* Extensions.swift */,
				OBJ_117 /* QueryDecoder.swift */,
				OBJ_118 /* QueryEncoder.swift */,
			);
			path = CodableQuery;
			sourceTree = "<group>";
		};
		OBJ_12 /* SwiftyJSON 17.0.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_13 /* SwiftyJSON */,
				OBJ_16 /* Package.swift */,
			);
			name = "SwiftyJSON 17.0.1";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_121 /* Kitura-TemplateEngine 1.7.4 */ = {
			isa = PBXGroup;
			children = (
				OBJ_122 /* KituraTemplateEngine */,
				OBJ_124 /* Package.swift */,
			);
			name = "Kitura-TemplateEngine 1.7.4";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_122 /* KituraTemplateEngine */ = {
			isa = PBXGroup;
			children = (
				OBJ_123 /* TemplateEngine.swift */,
			);
			name = KituraTemplateEngine;
			path = ".build/checkouts/Kitura-TemplateEngine.git--5059963620657797085/Sources/KituraTemplateEngine";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_125 /* Kitura-net 2.1.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_126 /* KituraNet */,
				OBJ_167 /* CHTTPParser */,
				OBJ_175 /* Package.swift */,
			);
			name = "Kitura-net 2.1.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_126 /* KituraNet */ = {
			isa = PBXGroup;
			children = (
				OBJ_127 /* BufferList.swift */,
				OBJ_128 /* ClientRequest.swift */,
				OBJ_129 /* ClientResponse.swift */,
				OBJ_130 /* ConnectionUpgradeFactory.swift */,
				OBJ_131 /* ConnectionUpgrader.swift */,
				OBJ_132 /* Error.swift */,
				OBJ_133 /* FastCGI */,
				OBJ_140 /* HTTP */,
				OBJ_147 /* HTTPParser */,
				OBJ_152 /* HeadersContainer.swift */,
				OBJ_153 /* IncomingSocketHandler.swift */,
				OBJ_154 /* IncomingSocketManager.swift */,
				OBJ_155 /* IncomingSocketProcessor.swift */,
				OBJ_156 /* IncomingSocketProcessorCreator.swift */,
				OBJ_157 /* ListenerGroup.swift */,
				OBJ_158 /* SPIUtils.swift */,
				OBJ_159 /* Server */,
				OBJ_165 /* ServerRequest.swift */,
				OBJ_166 /* ServerResponse.swift */,
			);
			name = KituraNet;
			path = ".build/checkouts/Kitura-net.git--7410958935072501107/Sources/KituraNet";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_13 /* SwiftyJSON */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* LclJSONSerialization.swift */,
				OBJ_15 /* SwiftyJSON.swift */,
			);
			name = SwiftyJSON;
			path = ".build/checkouts/SwiftyJSON.git--6955445084174387031/Sources/SwiftyJSON";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_133 /* FastCGI */ = {
			isa = PBXGroup;
			children = (
				OBJ_134 /* FastCGI.swift */,
				OBJ_135 /* FastCGIRecordCreate.swift */,
				OBJ_136 /* FastCGIRecordParser.swift */,
				OBJ_137 /* FastCGIServer.swift */,
				OBJ_138 /* FastCGIServerRequest.swift */,
				OBJ_139 /* FastCGIServerResponse.swift */,
			);
			path = FastCGI;
			sourceTree = "<group>";
		};
		OBJ_140 /* HTTP */ = {
			isa = PBXGroup;
			children = (
				OBJ_141 /* HTTP.swift */,
				OBJ_142 /* HTTPServer.swift */,
				OBJ_143 /* HTTPServerRequest.swift */,
				OBJ_144 /* HTTPServerResponse.swift */,
				OBJ_145 /* IncomingHTTPSocketProcessor.swift */,
				OBJ_146 /* KeepAliveState.swift */,
			);
			path = HTTP;
			sourceTree = "<group>";
		};
		OBJ_147 /* HTTPParser */ = {
			isa = PBXGroup;
			children = (
				OBJ_148 /* HTTPParser.swift */,
				OBJ_149 /* HTTPParserStatus.swift */,
				OBJ_150 /* ParseResults.swift */,
				OBJ_151 /* URLParser.swift */,
			);
			path = HTTPParser;
			sourceTree = "<group>";
		};
		OBJ_159 /* Server */ = {
			isa = PBXGroup;
			children = (
				OBJ_160 /* Server.swift */,
				OBJ_161 /* ServerDelegate.swift */,
				OBJ_162 /* ServerLifecycleListener.swift */,
				OBJ_163 /* ServerMonitor.swift */,
				OBJ_164 /* ServerState.swift */,
			);
			path = Server;
			sourceTree = "<group>";
		};
		OBJ_167 /* CHTTPParser */ = {
			isa = PBXGroup;
			children = (
				OBJ_168 /* http_parser.c */,
				OBJ_169 /* utils.c */,
				OBJ_170 /* include */,
			);
			name = CHTTPParser;
			path = ".build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_17 /* Kitura-CredentialsHTTP 2.0.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* CredentialsHTTP */,
				OBJ_23 /* Package.swift */,
			);
			name = "Kitura-CredentialsHTTP 2.0.1";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_170 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_171 /* utils.h */,
				OBJ_172 /* http_parser.h */,
				OBJ_173 /* CHTTPParser.h */,
				OBJ_174 /* module.modulemap */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_176 /* SSLService 1.0.6 */ = {
			isa = PBXGroup;
			children = (
				OBJ_177 /* SSLService */,
				OBJ_179 /* Package.swift */,
			);
			name = "SSLService 1.0.6";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_177 /* SSLService */ = {
			isa = PBXGroup;
			children = (
				OBJ_178 /* SSLService.swift */,
			);
			name = SSLService;
			path = ".build/checkouts/BlueSSLService.git--6577639804771281610/Sources/SSLService";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* CredentialsHTTP */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* CredentialsHTTPBasic.swift */,
				OBJ_20 /* CredentialsHTTPDigest.swift */,
				OBJ_21 /* UserProfileLoader.swift */,
				OBJ_22 /* VerifyPassword.swift */,
			);
			name = CredentialsHTTP;
			path = ".build/checkouts/Kitura-CredentialsHTTP.git--2255905302832386242/Sources/CredentialsHTTP";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_180 /* Socket 1.0.6 */ = {
			isa = PBXGroup;
			children = (
				OBJ_181 /* Socket */,
				OBJ_185 /* Package.swift */,
			);
			name = "Socket 1.0.6";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_181 /* Socket */ = {
			isa = PBXGroup;
			children = (
				OBJ_182 /* Socket.swift */,
				OBJ_183 /* SocketProtocols.swift */,
				OBJ_184 /* SocketUtils.swift */,
			);
			name = Socket;
			path = ".build/checkouts/BlueSocket.git-3162807777605905816/Sources/Socket";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_186 /* HeliumLogger 1.7.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_187 /* HeliumLogger */,
				OBJ_190 /* Package.swift */,
			);
			name = "HeliumLogger 1.7.1";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_187 /* HeliumLogger */ = {
			isa = PBXGroup;
			children = (
				OBJ_188 /* HeliumLogger.swift */,
				OBJ_189 /* HeliumStreamLogger.swift */,
			);
			name = HeliumLogger;
			path = ".build/checkouts/HeliumLogger.git-2106793442615829935/Sources/HeliumLogger";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_191 /* LoggerAPI 1.7.3 */ = {
			isa = PBXGroup;
			children = (
				OBJ_192 /* LoggerAPI */,
				OBJ_194 /* Package.swift */,
			);
			name = "LoggerAPI 1.7.3";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_192 /* LoggerAPI */ = {
			isa = PBXGroup;
			children = (
				OBJ_193 /* Logger.swift */,
			);
			name = LoggerAPI;
			path = ".build/checkouts/LoggerAPI.git--6449715459278086880/Sources/LoggerAPI";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_195 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Kitura-CredentialsHTTP::CredentialsHTTP::Product" /* CredentialsHTTP.framework */,
				"HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */,
				"leaky-kitura::leaky-kitura::Product" /* leaky-kitura */,
				"Kitura-net::KituraNet::Product" /* KituraNet.framework */,
				"Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */,
				"Cryptor::Cryptor::Product" /* Cryptor.framework */,
				"SSLService::SSLService::Product" /* SSLService.framework */,
				"Kitura-Credentials::Credentials::Product" /* Credentials.framework */,
				"KituraContracts::KituraContracts::Product" /* KituraContracts.framework */,
				"SwiftyJSON::SwiftyJSON::Product" /* SwiftyJSON.framework */,
				"Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */,
				"Socket::Socket::Product" /* Socket.framework */,
				"Kitura-Session::KituraSession::Product" /* KituraSession.framework */,
				"Kitura::Kitura::Product" /* Kitura.framework */,
				"LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_24 /* Kitura-Credentials 2.1.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* Credentials */,
				OBJ_32 /* Package.swift */,
			);
			name = "Kitura-Credentials 2.1.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_25 /* Credentials */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* BaseCacheElement.swift */,
				OBJ_27 /* Credentials.swift */,
				OBJ_28 /* CredentialsPluginProtocol.swift */,
				OBJ_29 /* RouterRequest+UserProfile.swift */,
				OBJ_30 /* UserProfile.swift */,
				OBJ_31 /* UserProfileDelegate.swift */,
			);
			name = Credentials;
			path = ".build/checkouts/Kitura-Credentials.git-1137106172743287290/Sources/Credentials";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_33 /* Kitura-Session 3.1.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_34 /* KituraSession */,
				OBJ_43 /* Package.swift */,
			);
			name = "Kitura-Session 3.1.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_34 /* KituraSession */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* CookieCryptography.swift */,
				OBJ_36 /* CookieManagement.swift */,
				OBJ_37 /* CookieParameter.swift */,
				OBJ_38 /* InMemoryStore.swift */,
				OBJ_39 /* RouterRequest+Session.swift */,
				OBJ_40 /* Session.swift */,
				OBJ_41 /* SessionState.swift */,
				OBJ_42 /* Store.swift */,
			);
			name = KituraSession;
			path = ".build/checkouts/Kitura-Session.git-4044573149666132076/Sources/KituraSession";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_44 /* Cryptor 1.0.2 */ = {
			isa = PBXGroup;
			children = (
				OBJ_45 /* Cryptor */,
				OBJ_56 /* Package.swift */,
			);
			name = "Cryptor 1.0.2";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_45 /* Cryptor */ = {
			isa = PBXGroup;
			children = (
				OBJ_46 /* Crypto.swift */,
				OBJ_47 /* Cryptor.swift */,
				OBJ_48 /* Digest.swift */,
				OBJ_49 /* HMAC.swift */,
				OBJ_50 /* KeyDerivation.swift */,
				OBJ_51 /* Random.swift */,
				OBJ_52 /* Status.swift */,
				OBJ_53 /* StreamCryptor.swift */,
				OBJ_54 /* Updatable.swift */,
				OBJ_55 /* Utilities.swift */,
			);
			name = Cryptor;
			path = ".build/checkouts/BlueCryptor.git-2709167748876642405/Sources/Cryptor";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_10 /* Tests */,
				OBJ_11 /* Dependencies */,
				OBJ_195 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_57 /* Kitura 2.3.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_58 /* Kitura */,
				OBJ_109 /* Package.swift */,
			);
			name = "Kitura 2.3.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_58 /* Kitura */ = {
			isa = PBXGroup;
			children = (
				OBJ_59 /* CodableRouter.swift */,
				OBJ_60 /* Error.swift */,
				OBJ_61 /* FileResourceServer.swift */,
				OBJ_62 /* HTTPStatusCode.swift */,
				OBJ_63 /* HTTPVersion.swift */,
				OBJ_64 /* Headers.swift */,
				OBJ_65 /* InternalError.swift */,
				OBJ_66 /* JSONPError.swift */,
				OBJ_67 /* Kitura.swift */,
				OBJ_68 /* LinkParameter.swift */,
				OBJ_69 /* MimeTypeAcceptor.swift */,
				OBJ_70 /* RouteRegex.swift */,
				OBJ_71 /* Router.swift */,
				OBJ_72 /* RouterElement.swift */,
				OBJ_73 /* RouterElementWalker.swift */,
				OBJ_74 /* RouterHTTPVerbs+Error.swift */,
				OBJ_75 /* RouterHTTPVerbs_generated.swift */,
				OBJ_76 /* RouterHandler.swift */,
				OBJ_77 /* RouterMethod.swift */,
				OBJ_78 /* RouterMiddleware.swift */,
				OBJ_79 /* RouterMiddlewareGenerator.swift */,
				OBJ_80 /* RouterMiddlewareWalker.swift */,
				OBJ_81 /* RouterParameterWalker.swift */,
				OBJ_82 /* RouterRequest.swift */,
				OBJ_83 /* RouterResponse.swift */,
				OBJ_84 /* SSLConfig.swift */,
				OBJ_85 /* Stack.swift */,
				OBJ_86 /* String+Extensions.swift */,
				OBJ_87 /* TemplatingError.swift */,
				OBJ_88 /* bodyParser */,
				OBJ_98 /* contentType */,
				OBJ_101 /* staticFileServer */,
			);
			name = Kitura;
			path = ".build/checkouts/Kitura.git-6522211175291160341/Sources/Kitura";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* leaky-kitura */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* leaky-kitura */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* main.swift */,
			);
			name = "leaky-kitura";
			path = "Sources/leaky-kitura";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_88 /* bodyParser */ = {
			isa = PBXGroup;
			children = (
				OBJ_89 /* BodyParser.swift */,
				OBJ_90 /* BodyParserProtocol.swift */,
				OBJ_91 /* JSONBodyParser.swift */,
				OBJ_92 /* MultiPartBodyParser.swift */,
				OBJ_93 /* ParsedBody.swift */,
				OBJ_94 /* Part.swift */,
				OBJ_95 /* RawBodyParser.swift */,
				OBJ_96 /* TextBodyParser.swift */,
				OBJ_97 /* URLEncodedBodyParser.swift */,
			);
			path = bodyParser;
			sourceTree = "<group>";
		};
		OBJ_98 /* contentType */ = {
			isa = PBXGroup;
			children = (
				OBJ_99 /* ContentType.swift */,
				OBJ_100 /* types.swift */,
			);
			path = contentType;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Cryptor::Cryptor" /* Cryptor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_300 /* Build configuration list for PBXNativeTarget "Cryptor" */;
			buildPhases = (
				OBJ_303 /* Sources */,
				OBJ_314 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cryptor;
			productName = Cryptor;
			productReference = "Cryptor::Cryptor::Product" /* Cryptor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_316 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */;
			buildPhases = (
				OBJ_319 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CryptorPackageDescription;
			productName = CryptorPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"HeliumLogger::HeliumLogger" /* HeliumLogger */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_322 /* Build configuration list for PBXNativeTarget "HeliumLogger" */;
			buildPhases = (
				OBJ_325 /* Sources */,
				OBJ_328 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_330 /* PBXTargetDependency */,
			);
			name = HeliumLogger;
			productName = HeliumLogger;
			productReference = "HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */;
			productType = "com.apple.product-type.framework";
		};
		"HeliumLogger::SwiftPMPackageDescription" /* HeliumLoggerPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_332 /* Build configuration list for PBXNativeTarget "HeliumLoggerPackageDescription" */;
			buildPhases = (
				OBJ_335 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HeliumLoggerPackageDescription;
			productName = HeliumLoggerPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-Credentials::Credentials" /* Credentials */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_228 /* Build configuration list for PBXNativeTarget "Credentials" */;
			buildPhases = (
				OBJ_231 /* Sources */,
				OBJ_238 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_249 /* PBXTargetDependency */,
				OBJ_251 /* PBXTargetDependency */,
				OBJ_253 /* PBXTargetDependency */,
				OBJ_255 /* PBXTargetDependency */,
				OBJ_257 /* PBXTargetDependency */,
				OBJ_259 /* PBXTargetDependency */,
				OBJ_261 /* PBXTargetDependency */,
				OBJ_263 /* PBXTargetDependency */,
				OBJ_265 /* PBXTargetDependency */,
				OBJ_267 /* PBXTargetDependency */,
			);
			name = Credentials;
			productName = Credentials;
			productReference = "Kitura-Credentials::Credentials::Product" /* Credentials.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-Credentials::SwiftPMPackageDescription" /* Kitura-CredentialsPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_410 /* Build configuration list for PBXNativeTarget "Kitura-CredentialsPackageDescription" */;
			buildPhases = (
				OBJ_413 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Kitura-CredentialsPackageDescription";
			productName = "Kitura-CredentialsPackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"Kitura-CredentialsHTTP::CredentialsHTTP" /* CredentialsHTTP */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_269 /* Build configuration list for PBXNativeTarget "CredentialsHTTP" */;
			buildPhases = (
				OBJ_272 /* Sources */,
				OBJ_277 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_289 /* PBXTargetDependency */,
				OBJ_290 /* PBXTargetDependency */,
				OBJ_291 /* PBXTargetDependency */,
				OBJ_292 /* PBXTargetDependency */,
				OBJ_293 /* PBXTargetDependency */,
				OBJ_294 /* PBXTargetDependency */,
				OBJ_295 /* PBXTargetDependency */,
				OBJ_296 /* PBXTargetDependency */,
				OBJ_297 /* PBXTargetDependency */,
				OBJ_298 /* PBXTargetDependency */,
				OBJ_299 /* PBXTargetDependency */,
			);
			name = CredentialsHTTP;
			productName = CredentialsHTTP;
			productReference = "Kitura-CredentialsHTTP::CredentialsHTTP::Product" /* CredentialsHTTP.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-CredentialsHTTP::SwiftPMPackageDescription" /* Kitura-CredentialsHTTPPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_404 /* Build configuration list for PBXNativeTarget "Kitura-CredentialsHTTPPackageDescription" */;
			buildPhases = (
				OBJ_407 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Kitura-CredentialsHTTPPackageDescription";
			productName = "Kitura-CredentialsHTTPPackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"Kitura-Session::KituraSession" /* KituraSession */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_508 /* Build configuration list for PBXNativeTarget "KituraSession" */;
			buildPhases = (
				OBJ_511 /* Sources */,
				OBJ_520 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_530 /* PBXTargetDependency */,
				OBJ_531 /* PBXTargetDependency */,
				OBJ_532 /* PBXTargetDependency */,
				OBJ_533 /* PBXTargetDependency */,
				OBJ_534 /* PBXTargetDependency */,
				OBJ_535 /* PBXTargetDependency */,
				OBJ_536 /* PBXTargetDependency */,
				OBJ_537 /* PBXTargetDependency */,
				OBJ_538 /* PBXTargetDependency */,
			);
			name = KituraSession;
			productName = KituraSession;
			productReference = "Kitura-Session::KituraSession::Product" /* KituraSession.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-Session::SwiftPMPackageDescription" /* Kitura-SessionPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_416 /* Build configuration list for PBXNativeTarget "Kitura-SessionPackageDescription" */;
			buildPhases = (
				OBJ_419 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Kitura-SessionPackageDescription";
			productName = "Kitura-SessionPackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_539 /* Build configuration list for PBXNativeTarget "KituraTemplateEngine" */;
			buildPhases = (
				OBJ_542 /* Sources */,
				OBJ_544 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KituraTemplateEngine;
			productName = KituraTemplateEngine;
			productReference = "Kitura-TemplateEngine::KituraTemplateEngine::Product" /* KituraTemplateEngine.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-TemplateEngine::SwiftPMPackageDescription" /* Kitura-TemplateEnginePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_422 /* Build configuration list for PBXNativeTarget "Kitura-TemplateEnginePackageDescription" */;
			buildPhases = (
				OBJ_425 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Kitura-TemplateEnginePackageDescription";
			productName = "Kitura-TemplateEnginePackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"Kitura-net::CHTTPParser" /* CHTTPParser */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_216 /* Build configuration list for PBXNativeTarget "CHTTPParser" */;
			buildPhases = (
				OBJ_219 /* Sources */,
				OBJ_222 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CHTTPParser;
			productName = CHTTPParser;
			productReference = "Kitura-net::CHTTPParser::Product" /* CHTTPParser.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-net::KituraNet" /* KituraNet */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_453 /* Build configuration list for PBXNativeTarget "KituraNet" */;
			buildPhases = (
				OBJ_456 /* Sources */,
				OBJ_493 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_498 /* PBXTargetDependency */,
				OBJ_499 /* PBXTargetDependency */,
				OBJ_500 /* PBXTargetDependency */,
				OBJ_501 /* PBXTargetDependency */,
			);
			name = KituraNet;
			productName = KituraNet;
			productReference = "Kitura-net::KituraNet::Product" /* KituraNet.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura-net::SwiftPMPackageDescription" /* Kitura-netPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_428 /* Build configuration list for PBXNativeTarget "Kitura-netPackageDescription" */;
			buildPhases = (
				OBJ_431 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Kitura-netPackageDescription";
			productName = "Kitura-netPackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"Kitura::Kitura" /* Kitura */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_337 /* Build configuration list for PBXNativeTarget "Kitura" */;
			buildPhases = (
				OBJ_340 /* Sources */,
				OBJ_388 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_396 /* PBXTargetDependency */,
				OBJ_397 /* PBXTargetDependency */,
				OBJ_398 /* PBXTargetDependency */,
				OBJ_399 /* PBXTargetDependency */,
				OBJ_400 /* PBXTargetDependency */,
				OBJ_401 /* PBXTargetDependency */,
				OBJ_402 /* PBXTargetDependency */,
			);
			name = Kitura;
			productName = Kitura;
			productReference = "Kitura::Kitura::Product" /* Kitura.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kitura::SwiftPMPackageDescription" /* KituraPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_503 /* Build configuration list for PBXNativeTarget "KituraPackageDescription" */;
			buildPhases = (
				OBJ_506 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KituraPackageDescription;
			productName = KituraPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"KituraContracts::KituraContracts" /* KituraContracts */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_433 /* Build configuration list for PBXNativeTarget "KituraContracts" */;
			buildPhases = (
				OBJ_436 /* Sources */,
				OBJ_444 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_446 /* PBXTargetDependency */,
			);
			name = KituraContracts;
			productName = KituraContracts;
			productReference = "KituraContracts::KituraContracts::Product" /* KituraContracts.framework */;
			productType = "com.apple.product-type.framework";
		};
		"KituraContracts::SwiftPMPackageDescription" /* KituraContractsPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_448 /* Build configuration list for PBXNativeTarget "KituraContractsPackageDescription" */;
			buildPhases = (
				OBJ_451 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KituraContractsPackageDescription;
			productName = KituraContractsPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"LoggerAPI::LoggerAPI" /* LoggerAPI */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_545 /* Build configuration list for PBXNativeTarget "LoggerAPI" */;
			buildPhases = (
				OBJ_548 /* Sources */,
				OBJ_550 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LoggerAPI;
			productName = LoggerAPI;
			productReference = "LoggerAPI::LoggerAPI::Product" /* LoggerAPI.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LoggerAPI::SwiftPMPackageDescription" /* LoggerAPIPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_552 /* Build configuration list for PBXNativeTarget "LoggerAPIPackageDescription" */;
			buildPhases = (
				OBJ_555 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LoggerAPIPackageDescription;
			productName = LoggerAPIPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"SSLService::SSLService" /* SSLService */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_557 /* Build configuration list for PBXNativeTarget "SSLService" */;
			buildPhases = (
				OBJ_560 /* Sources */,
				OBJ_562 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_564 /* PBXTargetDependency */,
			);
			name = SSLService;
			productName = SSLService;
			productReference = "SSLService::SSLService::Product" /* SSLService.framework */;
			productType = "com.apple.product-type.framework";
		};
		"SSLService::SwiftPMPackageDescription" /* SSLServicePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_566 /* Build configuration list for PBXNativeTarget "SSLServicePackageDescription" */;
			buildPhases = (
				OBJ_569 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SSLServicePackageDescription;
			productName = SSLServicePackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"Socket::Socket" /* Socket */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_571 /* Build configuration list for PBXNativeTarget "Socket" */;
			buildPhases = (
				OBJ_574 /* Sources */,
				OBJ_578 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Socket;
			productName = Socket;
			productReference = "Socket::Socket::Product" /* Socket.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Socket::SwiftPMPackageDescription" /* SocketPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_580 /* Build configuration list for PBXNativeTarget "SocketPackageDescription" */;
			buildPhases = (
				OBJ_583 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SocketPackageDescription;
			productName = SocketPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"SwiftyJSON::SwiftPMPackageDescription" /* SwiftyJSONPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_594 /* Build configuration list for PBXNativeTarget "SwiftyJSONPackageDescription" */;
			buildPhases = (
				OBJ_597 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SwiftyJSONPackageDescription;
			productName = SwiftyJSONPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"SwiftyJSON::SwiftyJSON" /* SwiftyJSON */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_586 /* Build configuration list for PBXNativeTarget "SwiftyJSON" */;
			buildPhases = (
				OBJ_589 /* Sources */,
				OBJ_592 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SwiftyJSON;
			productName = SwiftyJSON;
			productReference = "SwiftyJSON::SwiftyJSON::Product" /* SwiftyJSON.framework */;
			productType = "com.apple.product-type.framework";
		};
		"leaky-kitura::SwiftPMPackageDescription" /* leaky-kituraPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_635 /* Build configuration list for PBXNativeTarget "leaky-kituraPackageDescription" */;
			buildPhases = (
				OBJ_638 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "leaky-kituraPackageDescription";
			productName = "leaky-kituraPackageDescription";
			productType = "com.apple.product-type.framework";
		};
		"leaky-kitura::leaky-kitura" /* leaky-kitura */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_600 /* Build configuration list for PBXNativeTarget "leaky-kitura" */;
			buildPhases = (
				OBJ_603 /* Sources */,
				OBJ_605 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_620 /* PBXTargetDependency */,
				OBJ_621 /* PBXTargetDependency */,
				OBJ_622 /* PBXTargetDependency */,
				OBJ_623 /* PBXTargetDependency */,
				OBJ_624 /* PBXTargetDependency */,
				OBJ_625 /* PBXTargetDependency */,
				OBJ_626 /* PBXTargetDependency */,
				OBJ_627 /* PBXTargetDependency */,
				OBJ_628 /* PBXTargetDependency */,
				OBJ_629 /* PBXTargetDependency */,
				OBJ_630 /* PBXTargetDependency */,
				OBJ_631 /* PBXTargetDependency */,
				OBJ_632 /* PBXTargetDependency */,
				OBJ_633 /* PBXTargetDependency */,
			);
			name = "leaky-kitura";
			productName = leaky_kitura;
			productReference = "leaky-kitura::leaky-kitura::Product" /* leaky-kitura */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "leaky-kitura" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_195 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"CCurl::CCurl::ProductTarget" /* CCurl */,
				"Kitura-net::CHTTPParser" /* CHTTPParser */,
				"CommonCrypto::CommonCrypto::ProductTarget" /* CommonCrypto */,
				"Kitura-Credentials::Credentials" /* Credentials */,
				"Kitura-CredentialsHTTP::CredentialsHTTP" /* CredentialsHTTP */,
				"Cryptor::Cryptor" /* Cryptor */,
				"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */,
				"HeliumLogger::HeliumLogger" /* HeliumLogger */,
				"HeliumLogger::SwiftPMPackageDescription" /* HeliumLoggerPackageDescription */,
				"Kitura::Kitura" /* Kitura */,
				"Kitura-CredentialsHTTP::SwiftPMPackageDescription" /* Kitura-CredentialsHTTPPackageDescription */,
				"Kitura-Credentials::SwiftPMPackageDescription" /* Kitura-CredentialsPackageDescription */,
				"Kitura-Session::SwiftPMPackageDescription" /* Kitura-SessionPackageDescription */,
				"Kitura-TemplateEngine::SwiftPMPackageDescription" /* Kitura-TemplateEnginePackageDescription */,
				"Kitura-net::SwiftPMPackageDescription" /* Kitura-netPackageDescription */,
				"KituraContracts::KituraContracts" /* KituraContracts */,
				"KituraContracts::SwiftPMPackageDescription" /* KituraContractsPackageDescription */,
				"Kitura-net::KituraNet" /* KituraNet */,
				"Kitura::SwiftPMPackageDescription" /* KituraPackageDescription */,
				"Kitura-Session::KituraSession" /* KituraSession */,
				"Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */,
				"LoggerAPI::LoggerAPI" /* LoggerAPI */,
				"LoggerAPI::SwiftPMPackageDescription" /* LoggerAPIPackageDescription */,
				"SSLService::SSLService" /* SSLService */,
				"SSLService::SwiftPMPackageDescription" /* SSLServicePackageDescription */,
				"Socket::Socket" /* Socket */,
				"Socket::SwiftPMPackageDescription" /* SocketPackageDescription */,
				"SwiftyJSON::SwiftyJSON" /* SwiftyJSON */,
				"SwiftyJSON::SwiftPMPackageDescription" /* SwiftyJSONPackageDescription */,
				"leaky-kitura::leaky-kitura" /* leaky-kitura */,
				"leaky-kitura::SwiftPMPackageDescription" /* leaky-kituraPackageDescription */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_219 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_220 /* http_parser.c in Sources */,
				OBJ_221 /* utils.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_231 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_232 /* BaseCacheElement.swift in Sources */,
				OBJ_233 /* Credentials.swift in Sources */,
				OBJ_234 /* CredentialsPluginProtocol.swift in Sources */,
				OBJ_235 /* RouterRequest+UserProfile.swift in Sources */,
				OBJ_236 /* UserProfile.swift in Sources */,
				OBJ_237 /* UserProfileDelegate.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_272 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_273 /* CredentialsHTTPBasic.swift in Sources */,
				OBJ_274 /* CredentialsHTTPDigest.swift in Sources */,
				OBJ_275 /* UserProfileLoader.swift in Sources */,
				OBJ_276 /* VerifyPassword.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_303 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_304 /* Crypto.swift in Sources */,
				OBJ_305 /* Cryptor.swift in Sources */,
				OBJ_306 /* Digest.swift in Sources */,
				OBJ_307 /* HMAC.swift in Sources */,
				OBJ_308 /* KeyDerivation.swift in Sources */,
				OBJ_309 /* Random.swift in Sources */,
				OBJ_310 /* Status.swift in Sources */,
				OBJ_311 /* StreamCryptor.swift in Sources */,
				OBJ_312 /* Updatable.swift in Sources */,
				OBJ_313 /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_319 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_320 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_325 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_326 /* HeliumLogger.swift in Sources */,
				OBJ_327 /* HeliumStreamLogger.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_335 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_336 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_340 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_341 /* CodableRouter.swift in Sources */,
				OBJ_342 /* Error.swift in Sources */,
				OBJ_343 /* FileResourceServer.swift in Sources */,
				OBJ_344 /* HTTPStatusCode.swift in Sources */,
				OBJ_345 /* HTTPVersion.swift in Sources */,
				OBJ_346 /* Headers.swift in Sources */,
				OBJ_347 /* InternalError.swift in Sources */,
				OBJ_348 /* JSONPError.swift in Sources */,
				OBJ_349 /* Kitura.swift in Sources */,
				OBJ_350 /* LinkParameter.swift in Sources */,
				OBJ_351 /* MimeTypeAcceptor.swift in Sources */,
				OBJ_352 /* RouteRegex.swift in Sources */,
				OBJ_353 /* Router.swift in Sources */,
				OBJ_354 /* RouterElement.swift in Sources */,
				OBJ_355 /* RouterElementWalker.swift in Sources */,
				OBJ_356 /* RouterHTTPVerbs+Error.swift in Sources */,
				OBJ_357 /* RouterHTTPVerbs_generated.swift in Sources */,
				OBJ_358 /* RouterHandler.swift in Sources */,
				OBJ_359 /* RouterMethod.swift in Sources */,
				OBJ_360 /* RouterMiddleware.swift in Sources */,
				OBJ_361 /* RouterMiddlewareGenerator.swift in Sources */,
				OBJ_362 /* RouterMiddlewareWalker.swift in Sources */,
				OBJ_363 /* RouterParameterWalker.swift in Sources */,
				OBJ_364 /* RouterRequest.swift in Sources */,
				OBJ_365 /* RouterResponse.swift in Sources */,
				OBJ_366 /* SSLConfig.swift in Sources */,
				OBJ_367 /* Stack.swift in Sources */,
				OBJ_368 /* String+Extensions.swift in Sources */,
				OBJ_369 /* TemplatingError.swift in Sources */,
				OBJ_370 /* BodyParser.swift in Sources */,
				OBJ_371 /* BodyParserProtocol.swift in Sources */,
				OBJ_372 /* JSONBodyParser.swift in Sources */,
				OBJ_373 /* MultiPartBodyParser.swift in Sources */,
				OBJ_374 /* ParsedBody.swift in Sources */,
				OBJ_375 /* Part.swift in Sources */,
				OBJ_376 /* RawBodyParser.swift in Sources */,
				OBJ_377 /* TextBodyParser.swift in Sources */,
				OBJ_378 /* URLEncodedBodyParser.swift in Sources */,
				OBJ_379 /* ContentType.swift in Sources */,
				OBJ_380 /* types.swift in Sources */,
				OBJ_381 /* CacheRelatedHeadersSetter.swift in Sources */,
				OBJ_382 /* CompositeHeadersSetter.swift in Sources */,
				OBJ_383 /* FileServer.swift in Sources */,
				OBJ_384 /* RangeHeader.swift in Sources */,
				OBJ_385 /* ResourcePathHandler.swift in Sources */,
				OBJ_386 /* ResponseHeadersSetter.swift in Sources */,
				OBJ_387 /* StaticFileServer.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_407 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_408 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_413 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_414 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_419 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_420 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_425 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_426 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_431 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_432 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_436 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_437 /* BodyFormat.swift in Sources */,
				OBJ_438 /* ClosureAliases.swift in Sources */,
				OBJ_439 /* Coder.swift in Sources */,
				OBJ_440 /* Extensions.swift in Sources */,
				OBJ_441 /* QueryDecoder.swift in Sources */,
				OBJ_442 /* QueryEncoder.swift in Sources */,
				OBJ_443 /* Contracts.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_451 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_452 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_456 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_457 /* BufferList.swift in Sources */,
				OBJ_458 /* ClientRequest.swift in Sources */,
				OBJ_459 /* ClientResponse.swift in Sources */,
				OBJ_460 /* ConnectionUpgradeFactory.swift in Sources */,
				OBJ_461 /* ConnectionUpgrader.swift in Sources */,
				OBJ_462 /* Error.swift in Sources */,
				OBJ_463 /* FastCGI.swift in Sources */,
				OBJ_464 /* FastCGIRecordCreate.swift in Sources */,
				OBJ_465 /* FastCGIRecordParser.swift in Sources */,
				OBJ_466 /* FastCGIServer.swift in Sources */,
				OBJ_467 /* FastCGIServerRequest.swift in Sources */,
				OBJ_468 /* FastCGIServerResponse.swift in Sources */,
				OBJ_469 /* HTTP.swift in Sources */,
				OBJ_470 /* HTTPServer.swift in Sources */,
				OBJ_471 /* HTTPServerRequest.swift in Sources */,
				OBJ_472 /* HTTPServerResponse.swift in Sources */,
				OBJ_473 /* IncomingHTTPSocketProcessor.swift in Sources */,
				OBJ_474 /* KeepAliveState.swift in Sources */,
				OBJ_475 /* HTTPParser.swift in Sources */,
				OBJ_476 /* HTTPParserStatus.swift in Sources */,
				OBJ_477 /* ParseResults.swift in Sources */,
				OBJ_478 /* URLParser.swift in Sources */,
				OBJ_479 /* HeadersContainer.swift in Sources */,
				OBJ_480 /* IncomingSocketHandler.swift in Sources */,
				OBJ_481 /* IncomingSocketManager.swift in Sources */,
				OBJ_482 /* IncomingSocketProcessor.swift in Sources */,
				OBJ_483 /* IncomingSocketProcessorCreator.swift in Sources */,
				OBJ_484 /* ListenerGroup.swift in Sources */,
				OBJ_485 /* SPIUtils.swift in Sources */,
				OBJ_486 /* Server.swift in Sources */,
				OBJ_487 /* ServerDelegate.swift in Sources */,
				OBJ_488 /* ServerLifecycleListener.swift in Sources */,
				OBJ_489 /* ServerMonitor.swift in Sources */,
				OBJ_490 /* ServerState.swift in Sources */,
				OBJ_491 /* ServerRequest.swift in Sources */,
				OBJ_492 /* ServerResponse.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_506 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_507 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_511 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_512 /* CookieCryptography.swift in Sources */,
				OBJ_513 /* CookieManagement.swift in Sources */,
				OBJ_514 /* CookieParameter.swift in Sources */,
				OBJ_515 /* InMemoryStore.swift in Sources */,
				OBJ_516 /* RouterRequest+Session.swift in Sources */,
				OBJ_517 /* Session.swift in Sources */,
				OBJ_518 /* SessionState.swift in Sources */,
				OBJ_519 /* Store.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_542 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_543 /* TemplateEngine.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_548 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_549 /* Logger.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_555 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_556 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_560 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_561 /* SSLService.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_569 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_570 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_574 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_575 /* Socket.swift in Sources */,
				OBJ_576 /* SocketProtocols.swift in Sources */,
				OBJ_577 /* SocketUtils.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_583 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_584 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_589 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_590 /* LclJSONSerialization.swift in Sources */,
				OBJ_591 /* SwiftyJSON.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_597 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_598 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_603 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_604 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_638 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_639 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_249 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-Session::KituraSession" /* KituraSession */;
			targetProxy = 0B5EC30B209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_251 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 0B5EC322209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_253 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura::Kitura" /* Kitura */;
			targetProxy = 0B5EC323209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_255 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "KituraContracts::KituraContracts" /* KituraContracts */;
			targetProxy = 0B5EC324209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_257 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */;
			targetProxy = 0B5EC325209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_259 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::KituraNet" /* KituraNet */;
			targetProxy = 0B5EC326209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_261 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC327209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_263 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC328209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_265 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC329209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_267 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC32A209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_289 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-Credentials::Credentials" /* Credentials */;
			targetProxy = 0B5EC30A209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_290 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-Session::KituraSession" /* KituraSession */;
			targetProxy = 0B5EC32B209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_291 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 0B5EC32C209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_292 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura::Kitura" /* Kitura */;
			targetProxy = 0B5EC32D209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_293 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "KituraContracts::KituraContracts" /* KituraContracts */;
			targetProxy = 0B5EC32E209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_294 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */;
			targetProxy = 0B5EC32F209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_295 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::KituraNet" /* KituraNet */;
			targetProxy = 0B5EC330209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_296 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC331209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_297 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC332209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_298 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC333209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_299 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC334209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_330 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC307209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_396 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "KituraContracts::KituraContracts" /* KituraContracts */;
			targetProxy = 0B5EC30E209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_397 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */;
			targetProxy = 0B5EC310209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_398 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::KituraNet" /* KituraNet */;
			targetProxy = 0B5EC311209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_399 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC317209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_400 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC318209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_401 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC319209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_402 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC31A209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_446 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC30F209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_498 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC312209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_499 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC314209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_500 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC315209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_501 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC316209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_530 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 0B5EC30C209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_531 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura::Kitura" /* Kitura */;
			targetProxy = 0B5EC30D209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_532 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "KituraContracts::KituraContracts" /* KituraContracts */;
			targetProxy = 0B5EC31B209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_533 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */;
			targetProxy = 0B5EC31C209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_534 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::KituraNet" /* KituraNet */;
			targetProxy = 0B5EC31D209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_535 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC31E209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_536 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC31F209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_537 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC320209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_538 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC321209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_564 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC313209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_620 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SwiftyJSON::SwiftyJSON" /* SwiftyJSON */;
			targetProxy = 0B5EC308209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_621 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-CredentialsHTTP::CredentialsHTTP" /* CredentialsHTTP */;
			targetProxy = 0B5EC309209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_622 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-Credentials::Credentials" /* Credentials */;
			targetProxy = 0B5EC335209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_623 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-Session::KituraSession" /* KituraSession */;
			targetProxy = 0B5EC336209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_624 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 0B5EC337209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_625 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura::Kitura" /* Kitura */;
			targetProxy = 0B5EC338209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_626 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "KituraContracts::KituraContracts" /* KituraContracts */;
			targetProxy = 0B5EC339209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_627 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-TemplateEngine::KituraTemplateEngine" /* KituraTemplateEngine */;
			targetProxy = 0B5EC33A209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_628 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::KituraNet" /* KituraNet */;
			targetProxy = 0B5EC33B209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_629 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SSLService::SSLService" /* SSLService */;
			targetProxy = 0B5EC33C209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_630 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Socket::Socket" /* Socket */;
			targetProxy = 0B5EC33D209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_631 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kitura-net::CHTTPParser" /* CHTTPParser */;
			targetProxy = 0B5EC33E209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_632 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "HeliumLogger::HeliumLogger" /* HeliumLogger */;
			targetProxy = 0B5EC33F209CA0E80092A163 /* PBXContainerItemProxy */;
		};
		OBJ_633 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LoggerAPI::LoggerAPI" /* LoggerAPI */;
			targetProxy = 0B5EC340209CA0E80092A163 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_213 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_214 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_217 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/CHTTPParser_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CHTTPParser;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = CHTTPParser;
			};
			name = Debug;
		};
		OBJ_218 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/CHTTPParser_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CHTTPParser;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = CHTTPParser;
			};
			name = Release;
		};
		OBJ_225 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_226 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_229 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Credentials_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Credentials;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Credentials;
			};
			name = Debug;
		};
		OBJ_230 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Credentials_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Credentials;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Credentials;
			};
			name = Release;
		};
		OBJ_270 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/CredentialsHTTP_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = CredentialsHTTP;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CredentialsHTTP;
			};
			name = Debug;
		};
		OBJ_271 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/CredentialsHTTP_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = CredentialsHTTP;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CredentialsHTTP;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_301 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Cryptor_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Cryptor;
			};
			name = Debug;
		};
		OBJ_302 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Cryptor_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Cryptor;
			};
			name = Release;
		};
		OBJ_317 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_318 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_323 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/HeliumLogger_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = HeliumLogger;
			};
			name = Debug;
		};
		OBJ_324 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/HeliumLogger_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = HeliumLogger;
			};
			name = Release;
		};
		OBJ_333 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		OBJ_334 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		OBJ_338 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Kitura_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Kitura;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Kitura;
			};
			name = Debug;
		};
		OBJ_339 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Kitura_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Kitura;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Kitura;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_405 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_406 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_411 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_412 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_417 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_418 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_423 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_424 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_429 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_430 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_434 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraContracts_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = KituraContracts;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraContracts;
			};
			name = Debug;
		};
		OBJ_435 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraContracts_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = KituraContracts;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraContracts;
			};
			name = Release;
		};
		OBJ_449 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_450 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_454 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraNet_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = KituraNet;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraNet;
			};
			name = Debug;
		};
		OBJ_455 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraNet_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = KituraNet;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraNet;
			};
			name = Release;
		};
		OBJ_504 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_505 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_509 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraSession_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = KituraSession;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraSession;
			};
			name = Debug;
		};
		OBJ_510 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraSession_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = KituraSession;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraSession;
			};
			name = Release;
		};
		OBJ_540 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraTemplateEngine_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = KituraTemplateEngine;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraTemplateEngine;
			};
			name = Debug;
		};
		OBJ_541 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/KituraTemplateEngine_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = KituraTemplateEngine;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = KituraTemplateEngine;
			};
			name = Release;
		};
		OBJ_546 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/LoggerAPI_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LoggerAPI;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LoggerAPI;
			};
			name = Debug;
		};
		OBJ_547 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/LoggerAPI_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LoggerAPI;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LoggerAPI;
			};
			name = Release;
		};
		OBJ_553 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_554 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_558 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/SSLService_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SSLService;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SSLService;
			};
			name = Debug;
		};
		OBJ_559 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/SSLService_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SSLService;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SSLService;
			};
			name = Release;
		};
		OBJ_567 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_568 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_572 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Socket_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Socket;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Socket;
			};
			name = Debug;
		};
		OBJ_573 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/Socket_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Socket;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Socket;
			};
			name = Release;
		};
		OBJ_581 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_582 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_587 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/SwiftyJSON_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SwiftyJSON;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = SwiftyJSON;
			};
			name = Debug;
		};
		OBJ_588 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/SwiftyJSON_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SwiftyJSON;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = SwiftyJSON;
			};
			name = Release;
		};
		OBJ_595 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		OBJ_596 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		OBJ_601 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/leaky_kitura_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = "leaky-kitura";
			};
			name = Debug;
		};
		OBJ_602 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
					"$(SRCROOT)/.build/checkouts/Kitura-net.git--7410958935072501107/Sources/CHTTPParser/include",
					"$(SRCROOT)/.build/checkouts/CCurl.git-8026296523752779197",
					"$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser",
				);
				INFOPLIST_FILE = "leaky-kitura.xcodeproj/leaky_kitura_Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/leaky-kitura.xcodeproj/GeneratedModuleMap/CHTTPParser/module.modulemap";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = "leaky-kitura";
			};
			name = Release;
		};
		OBJ_636 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_637 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "leaky-kitura" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_212 /* Build configuration list for PBXAggregateTarget "CCurl" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_213 /* Debug */,
				OBJ_214 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_216 /* Build configuration list for PBXNativeTarget "CHTTPParser" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_217 /* Debug */,
				OBJ_218 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_224 /* Build configuration list for PBXAggregateTarget "CommonCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_225 /* Debug */,
				OBJ_226 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_228 /* Build configuration list for PBXNativeTarget "Credentials" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_229 /* Debug */,
				OBJ_230 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_269 /* Build configuration list for PBXNativeTarget "CredentialsHTTP" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_270 /* Debug */,
				OBJ_271 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_300 /* Build configuration list for PBXNativeTarget "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_301 /* Debug */,
				OBJ_302 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_316 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_317 /* Debug */,
				OBJ_318 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_322 /* Build configuration list for PBXNativeTarget "HeliumLogger" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_323 /* Debug */,
				OBJ_324 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_332 /* Build configuration list for PBXNativeTarget "HeliumLoggerPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_333 /* Debug */,
				OBJ_334 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_337 /* Build configuration list for PBXNativeTarget "Kitura" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_338 /* Debug */,
				OBJ_339 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_404 /* Build configuration list for PBXNativeTarget "Kitura-CredentialsHTTPPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_405 /* Debug */,
				OBJ_406 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_410 /* Build configuration list for PBXNativeTarget "Kitura-CredentialsPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_411 /* Debug */,
				OBJ_412 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_416 /* Build configuration list for PBXNativeTarget "Kitura-SessionPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_417 /* Debug */,
				OBJ_418 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_422 /* Build configuration list for PBXNativeTarget "Kitura-TemplateEnginePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_423 /* Debug */,
				OBJ_424 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_428 /* Build configuration list for PBXNativeTarget "Kitura-netPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_429 /* Debug */,
				OBJ_430 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_433 /* Build configuration list for PBXNativeTarget "KituraContracts" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_434 /* Debug */,
				OBJ_435 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_448 /* Build configuration list for PBXNativeTarget "KituraContractsPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_449 /* Debug */,
				OBJ_450 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_453 /* Build configuration list for PBXNativeTarget "KituraNet" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_454 /* Debug */,
				OBJ_455 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_503 /* Build configuration list for PBXNativeTarget "KituraPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_504 /* Debug */,
				OBJ_505 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_508 /* Build configuration list for PBXNativeTarget "KituraSession" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_509 /* Debug */,
				OBJ_510 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_539 /* Build configuration list for PBXNativeTarget "KituraTemplateEngine" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_540 /* Debug */,
				OBJ_541 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_545 /* Build configuration list for PBXNativeTarget "LoggerAPI" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_546 /* Debug */,
				OBJ_547 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_552 /* Build configuration list for PBXNativeTarget "LoggerAPIPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_553 /* Debug */,
				OBJ_554 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_557 /* Build configuration list for PBXNativeTarget "SSLService" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_558 /* Debug */,
				OBJ_559 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_566 /* Build configuration list for PBXNativeTarget "SSLServicePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_567 /* Debug */,
				OBJ_568 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_571 /* Build configuration list for PBXNativeTarget "Socket" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_572 /* Debug */,
				OBJ_573 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_580 /* Build configuration list for PBXNativeTarget "SocketPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_581 /* Debug */,
				OBJ_582 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_586 /* Build configuration list for PBXNativeTarget "SwiftyJSON" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_587 /* Debug */,
				OBJ_588 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_594 /* Build configuration list for PBXNativeTarget "SwiftyJSONPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_595 /* Debug */,
				OBJ_596 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_600 /* Build configuration list for PBXNativeTarget "leaky-kitura" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_601 /* Debug */,
				OBJ_602 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_635 /* Build configuration list for PBXNativeTarget "leaky-kituraPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_636 /* Debug */,
				OBJ_637 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
